name: Build Linux Packages

on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
      expect_failure:
        type: boolean
        default: false
      extra_cmake_options:
        type: string

  workflow_call:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
      expect_failure:
        type: boolean
      extra_cmake_options:
        type: string

# See the details regarding permissions from the link:
# https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#oidc
permissions:
  contents: read

jobs:
  build_linux_packages:
    name: Build Linux Packages (xfail ${{ inputs.expect_failure }})
    runs-on: azure-linux-scale-rocm
    continue-on-error: ${{ inputs.expect_failure }}
    permissions:
      id-token: write
    container:
      image: ghcr.io/rocm/therock_build_manylinux_x86_64:main
    strategy:
      fail-fast: true
    env:
      CACHE_DIR: ${{ github.workspace }}/.container-cache
      CCACHE_DIR: "${{ github.workspace }}/.container-cache/ccache"
      CCACHE_MAXSIZE: "700M"
      AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
      TEATIME_FORCE_INTERACTIVE: 0
      BUCKET: ${{ github.event.repository.name == 'TheRock'  && 'therock-artifacts' || 'therock-artifacts-external' }}
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "ROCm/TheRock"

      - name: "Checking out repository for rocm-libraries"
        if: ${{ github.repository == 'ROCm/rocm-libraries' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "ROCm/rocm-libraries"
          ref: ${{ github.head_ref || github.ref_name }}
          path: "rocm-libraries"

      - name: Runner Health Settings
        run: |
          echo "CCACHE_DIR=${CCACHE_DIR}"
          df -h
          ccache -z
          mkdir -p $CCACHE_DIR
          cmake --version
          echo "Installed Python versions:"
          ls -d /opt/python
          echo "python: $(which python), python3: $(which python3)"
          echo "Git version: $(git --version)"
          git config --global --add safe.directory $PWD
          git config fetch.parallel 10

      # TODO: We shouldn't be using a cache on actual release branches, but it
      # really helps for iteration time.
      - name: Enable cache
        uses: actions/cache/restore@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ${{ env.CACHE_DIR }}
          key: linux-build-packages-manylinux-v2-${{ github.sha }}
          restore-keys: |
            linux-build-packages-manylinux-v2-

      - name: Fetch sources
        run: |
          ./build_tools/fetch_sources.py --jobs 12

      - name: Install python deps
        run: |
          pip install -r requirements.txt

      - name: Build Projects
        id: build
        run: |
          # Generate a new build id.
          package_version="${{ inputs.package_version }}"
          extra_cmake_options="${{ inputs.extra_cmake_options }}"
          echo "Building package ${package_version}"

          # Build.
          cmake -B build -GNinja . \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DTHEROCK_AMDGPU_FAMILIES=${{env.AMDGPU_FAMILIES}} \
            -DTHEROCK_PACKAGE_VERSION="${package_version}" \
            -DTHEROCK_VERBOSE=ON \
            -DBUILD_TESTING=ON \
            ${extra_cmake_options}

          cmake --build build --target therock-archives therock-dist

      - name: Test Packaging
        if: ${{ github.event.repository.name == 'TheRock' }}
        run: |
          ctest --test-dir build --output-on-failure

      - name: Report
        if: ${{ !cancelled() }}
        run: |
          echo "Full SDK du:"
          echo "------------"
          du -h -d 1 build/dist/rocm
          echo "Artifact Archives:"
          echo "------------------"
          ls -lh build/artifacts/*.tar.xz
          echo "Artifacts:"
          echo "----------"
          du -h -d 1 build/artifacts
          echo "CCache Stats:"
          echo "-------------"
          ccache -s

      - name: Configure AWS Credentials
        if: always()
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-artifacts

      # TODO: Move to script
      - name: Create Index Files
        if: always()
        run: |
          curl --silent --fail --show-error --location \
            https://raw.githubusercontent.com/joshbrunty/Indexer/6d8cbfd15d3853b482e6a49f2d875ded9188b721/indexer.py \
            --output build/indexer.py
          python build/indexer.py -f '*.tar.xz*' build/artifacts/
          python3 build_tools/create_log_index.py \
            --build-dir=build \
            --amdgpu-family=${{ env.AMDGPU_FAMILIES }}

      # TODO: Move to script
      - name: Upload Artifacts
        run: |
          aws s3 cp build/artifacts/ s3://${{env.BUCKET}}/${{github.run_id}}-linux/ \
            --recursive --no-follow-symlinks \
            --exclude "*" \
            --include "*.tar.xz*"
          aws s3 cp build/artifacts/index.html s3://${{env.BUCKET}}/${{github.run_id}}-linux/index-${{env.AMDGPU_FAMILIES}}.html

      - name: Upload Logs
        if: always()
        run: |
          python3 build_tools/upload_logs_to_s3.py \
            --build-dir=build \
            --s3-base-path="s3://${{env.BUCKET}}/${{github.run_id}}-linux/logs/${{env.AMDGPU_FAMILIES}}"

      - name: Add Links to Job Summary
        if: always()
        run: |
          LOG_URL="https://${{env.BUCKET}}.s3.us-east-2.amazonaws.com/${{github.run_id}}-linux/logs/${{env.AMDGPU_FAMILIES}}/index.html"
          echo "[Build Logs](${LOG_URL})" >> $GITHUB_STEP_SUMMARY

          ARTIFACT_INDEX=build/artifacts/index.html
          if [ -f "${ARTIFACT_INDEX}" ]; then
            ARTIFACT_URL="https://${{env.BUCKET}}.s3.us-east-2.amazonaws.com/${{github.run_id}}-linux/index-${{env.AMDGPU_FAMILIES}}.html"

            echo "[Artifacts](${ARTIFACT_URL})" >> $GITHUB_STEP_SUMMARY
          else
            echo "[INFO] No artifacts index found. Skipping artifact link."
          fi

      - name: Save cache
        uses: actions/cache/save@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        if: always()
        with:
          path: ${{ env.CACHE_DIR }}
          key: linux-build-packages-manylinux-v2-${{ github.sha }}
