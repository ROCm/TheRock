name: Build Linux Packages

on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
      expect_failure:
        type: boolean
        default: false
      extra_cmake_options:
        type: string

  workflow_call:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
      expect_failure:
        type: boolean
      extra_cmake_options:
        type: string
      subtree:
        type: string
    secrets:
      rocm_libraries_app_id:
        required: false
      rocm_libraries_app_private_key:
        required: false


# See the details regarding permissions from the link:
# https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#oidc
permissions:
  contents: read

jobs:
  build_linux_packages:
    name: Build Linux Packages (xfail ${{ inputs.expect_failure }})
    runs-on: azure-linux-scale-rocm
    continue-on-error: ${{ inputs.expect_failure }}
    permissions:
      id-token: write
    container:
      image: ghcr.io/rocm/therock_build_manylinux_x86_64:main
    strategy:
      fail-fast: true
    env:
      CACHE_DIR: ${{ github.workspace }}/.container-cache
      CCACHE_DIR: "${{ github.workspace }}/.container-cache/ccache"
      CCACHE_MAXSIZE: "700M"
      AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
      TEATIME_FORCE_INTERACTIVE: 0
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Runner Health Settings
        run: |
          echo "CCACHE_DIR=${CCACHE_DIR}"
          df -h
          ccache -z
          mkdir -p $CCACHE_DIR
          cmake --version
          echo "Installed Python versions:"
          ls -d /opt/python
          echo "python: $(which python), python3: $(which python3)"
          echo "Git version: $(git --version)"
          git config --global --add safe.directory $PWD
          git config fetch.parallel 10

      # TODO: We shouldn't be using a cache on actual release branches, but it
      # really helps for iteration time.
      - name: Enable cache
        uses: actions/cache/restore@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ${{ env.CACHE_DIR }}
          key: linux-build-packages-manylinux-v2-${{ github.sha }}
          restore-keys: |
            linux-build-packages-manylinux-v2-

      - name: Build Linux Packages
        uses: './.github/actions/build_linux_action'
        with:
          package_version: ${{ inputs.package_version }}
          amdgpu_families: ${{ inputs.amdgpu_families }}
          extra_cmake_options: ${{ inputs.extra_cmake_options }}

      - name: Artifact Upload
        uses: './.github/actions/artifact_upload_action'
        with:
          build_directory: "build"
          amdgpu_families: ${{ inputs.amdgpu_families }}

      - name: Save cache
        uses: actions/cache/save@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        if: always()
        with:
          path: ${{ env.CACHE_DIR }}
          key: linux-build-packages-manylinux-v2-${{ github.sha }}
