name: Build Linux PyTorch Wheels

on:
  workflow_call:
    inputs:
      AMDGPU_FAMILIES:
        required: true
        type: string
      PYTORCH_TARGET_ARCH:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      AMDGPU_FAMILIES:
        required: true
        type: string
      PYTORCH_TARGET_ARCH:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build_pytorch_wheels:
    name: Build Linux PyTorch Wheels | ${{ inputs.AMDGPU_FAMILIES }} | Python ${{ inputs.python_version }}
    runs-on: ${{ github.repository_owner == 'ROCm' && 'azure-linux-scale-rocm' || 'ubuntu-24.04' }}
    container:
      image: ghcr.io/rocm/therock_build_manylinux_x86_64:main
    env:
      OUTPUT_DIR: ${{ github.workspace }}/output
      PACKAGE_DIST_DIR: ${{ github.workspace }}/output/packages/dist
      S3_BUCKET: ${{ inputs.s3_bucket }}
      S3_ENDPOINT: "s3.us-east-2.amazonaws.com"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure Git Identity
        run: |
          git config --global user.name "therockbot"
          git config --global user.email "therockbot@amd.com"

      - name: Add selected Python version to PATH
        run: |
          python_dir="/opt/python/${{ inputs.python_version }}"
          if ! [ -x "${python_dir}/bin/python" ]; then
            echo "ERROR: Could not find python: ${python_dir}"
            exit 1
          fi
          echo "${python_dir}/bin" >> "$GITHUB_PATH"

      - name: Checkout PyTorch Source Repos
        run: |
          ./external-builds/pytorch/pytorch_torch_repo.py checkout
          ./external-builds/pytorch/pytorch_audio_repo.py checkout
          ./external-builds/pytorch/pytorch_vision_repo.py checkout

      - name: Create pip cache directory
        run: mkdir -p /tmp/pipcache

      - name: Build PyTorch Wheels
        run: |
          echo "Building PyTorch wheels for ${{ inputs.PYTORCH_TARGET_ARCH }}"
          ./external-builds/pytorch/build_prod_wheels.py \
            --pip-cache-dir /tmp/pipcache \
            --find-links "https://${{ env.S3_BUCKET }}.s3.us-east-2.amazonaws.com/${{ inputs.AMDGPU_FAMILIES }}/index.html" \
            build \
            --install-rocm \
            --clean \
            --output-dir ${{ env.PACKAGE_DIST_DIR }} \
            --pytorch-rocm-arch ${{ inputs.PYTORCH_TARGET_ARCH }}

      - name: Configure AWS Credentials
        if: always()
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-nightly-releases

      - name: Sanity Check Wheel
        run: |
          python external-builds/pytorch/sanity_check_wheel.py ${{ env.PACKAGE_DIST_DIR }}/

      - name: Upload wheels to S3
        if: ${{ github.repository_owner == 'ROCm' }}
        run: |
          aws s3 cp ${{ env.PACKAGE_DIST_DIR }}/ s3://${{ env.S3_BUCKET }}/${{ inputs.AMDGPU_FAMILIES }}/ \
            --recursive --exclude "*" --include "*.whl"

      - name: (Re-)Generate Python package release index
        if: ${{ github.repository_owner == 'ROCm' }}
        run: |
          pip install boto3
          python ./build_tools/packaging/python/generate_release_index.py \
            --bucket=${{ env.S3_BUCKET }} \
            --endpoint=${{ env.S3_ENDPOINT }} \
            --subdir=${{ inputs.AMDGPU_FAMILIES }} \
            --output=${{ github.workspace }}/index.html
          aws s3 cp ${{ github.workspace }}/index.html s3://${{ env.S3_BUCKET }}/${{ inputs.AMDGPU_FAMILIES }}/
