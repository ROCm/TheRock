name: TheRock Test Components Sharded

on:
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
        default: ""
      test_runs_on:
        type: string
      platform:
        type: string
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
        default: ""
      test_runs_on:
        type: string
      platform:
        type: string
  push:
    branches:
      - ADHOCBUILD

permissions:
  contents: read
  id-token: write  # Move to top level for OIDC

jobs:
  test_components_sharded:
    name: "Sharded ROCM Test"
    runs-on: ${{ inputs.test_runs_on }}
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      ARTIFACT_RUN_ID: "${{ inputs.artifact_run_id != '' && inputs.artifact_run_id || github.run_id }}"
      OUTPUT_ARTIFACTS_DIR: ${{ github.workspace }}/build
      THEROCK_BIN_DIR: ${{ github.workspace }}/build/bin
    steps:
      - name: "List AMD GPU Families"
        run: |
          ls

      - name: Configure AWS Credentials - Tests
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-tests

      - name: "Fetch 'build_tools' from repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          sparse-checkout: build_tools
          path: prejob

      - name: Pre-job cleanup processes on Windows
        if: ${{ runner.os == 'Windows' }}
        shell: powershell
        run: . '${{ github.workspace }}\prejob\build_tools\github_actions\cleanup_processes.ps1'

      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "ROCm/TheRock"

      - name: Run setup test environment workflow
        uses: './.github/actions/setup_test_environment'
        with:
          ARTIFACT_RUN_ID: ${{ env.ARTIFACT_RUN_ID }}
          AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
          OUTPUT_ARTIFACTS_DIR: ${{ env.OUTPUT_ARTIFACTS_DIR }}
          VENV_DIR: ${{ env.VENV_DIR }}
          FETCH_ARTIFACT_ARGS: "--tests"
          IS_PR_FROM_FORK: ${{ github.event.pull_request.head.repo.fork }}

      - name: Set HIP_CLANG_PATH for windows
        if: ${{ runner.os == 'Windows' }}
        run: echo "HIP_CLANG_PATH=${OUTPUT_ARTIFACTS_DIR}\lib\llvm\bin" >> $GITHUB_ENV

      - name: Run ROCm Sanity Tests
        timeout-minutes: 5
        env:
          AMD_LOG_LEVEL: 4
        run: |
          pip install -r tests/sharding/requirements.txt
          pytest tests/ --log-cli-level=info --timeout=60


      - name: Test Path
        run: |
          echo "Testing path: ${OUTPUT_ARTIFACTS_DIR}"
          ls ${OUTPUT_ARTIFACTS_DIR}
          echo "TP - ${THEROCK_BIN_DIR}"
          ls /home/runner/_work/TheRock/TheRock/build/bin
      - name: Sharded Tests
        timeout-minutes: 600
        run: |
          cd tests/sharding
          pytest -v -s --tb=short tests.py --rock=${OUTPUT_ARTIFACTS_DIR};

      - name: Post-job cleanup processes on Windows
        if: ${{ always() && runner.os == 'Windows' }}
        shell: powershell
        run: . '${{ github.workspace }}\build_tools\github_actions\cleanup_processes.ps1'
