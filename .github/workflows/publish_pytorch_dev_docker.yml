name: Publish PyTorch Dev Dockers

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *" # Runs Nightly at 2 AM UTC

jobs:
  build-and-push-image:
    strategy:
      fail-fast: false
      matrix:
        targets:
          - amdgpu_target: "gfx942"
          - amdgpu_target: "gfx1100"
          - amdgpu_target: "gfx1201"

    name: ${{ matrix.targets.amdgpu_target }}::Build
    runs-on: azure-linux-scale-rocm
    outputs:
      digests: ${{ steps.export.outputs.digests }}
      version: ${{ env.VERSION }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ROCm/therock_pytorch_dev_ubuntu_24_04_${{ matrix.targets.amdgpu_target }}
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Runner Health Settings
        run: |
          df -h
          echo "python: $(which python), python3: $(which python3)"
          echo "Git version: $(git --version)"
          git config --global --add safe.directory $PWD
          git config fetch.parallel 10
          git config --global user.email "nobody@amd.com"
          git config --global user.name "Nobody"

      - name: Fetch sources
        run: |
          python3 ./build_tools/fetch_sources.py --jobs 10

      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set nightly version
        run: |
          BASE_VERSION=$(jq -r '.["rocm-version"]' version.json)
          echo "VERSION=${BASE_VERSION}rc$(date +'%Y%m%d')" >> "$GITHUB_ENV"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.9
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        id: build_push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: dockerfiles/pytorch-dev/pytorch_dev_ubuntu_24.04.Dockerfile
          build-args: |
            AMDGPU_TARGETS=${{ matrix.targets.amdgpu_target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.title=PyTorch ROCm Dev Image
            org.opencontainers.image.description=Nightly ROCm PyTorch Dev Docker for target ${{ matrix.targets.amdgpu_target }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Export digest
        id: export
        run: |
          # Get the target name
          TARGET="${{ matrix.targets.amdgpu_target }}"
          # Get the digest 
          DIGEST="${{ steps.build_push.outputs.digest }}"
          
          # Create an output variable with target-specific key
          echo "digests={\"target\":\"$TARGET\",\"digest\":\"$DIGEST\"}" >> $GITHUB_OUTPUT
          echo "Exported digest: $DIGEST for $TARGET"

  verify-image:
    needs: build-and-push-image
    strategy:
      fail-fast: false
      matrix:
        include:
           - amdgpu_target: gfx942
             runner: "linux-mi300-1gpu-ossci-rocm"  # Default runner for gfx942
            #TODO Add runner param for gfx1100 when the runner available
           - amdgpu_target: gfx1201
             runner: "linux-rx9070-gpu-rocm"  # Specialized runner for gfx1201
    uses: ./.github/workflows/verify_docker_image.yml
    with:
      amdgpu_target: ${{ matrix.amdgpu_target }}
      image_digest: ${{ fromJson(needs.build-and-push-image.outputs.digests).target == matrix.amdgpu_target && fromJson(needs.build-and-push-image.outputs.digests).digest || '' }}
      runner_type: ${{ matrix.runner }}

  on-success:
    needs: [build-and-push-image, verify-image]
    if: ${{ success() }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - amdgpu_target: "gfx942"
            #TODO Add param for gfx1100 when the runner available
          - amdgpu_target: "gfx1201"
    runs-on: azure-linux-scale-rocm
    steps:
      - name: Set version from build job
        run: |
          echo "VERSION=${{ needs.build-and-push-image.outputs.version }}" >> "$GITHUB_ENV"
          echo "Using version: ${{ needs.build-and-push-image.outputs.version }}"

      - name: Log in to registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push verified image
        run: |
          TARGET="${{ matrix.amdgpu_target }}"
          DIGESTS='${{ needs.build-and-push-image.outputs.digests }}'
          
          # Parse the JSON to get the digest for the current target
          if [[ $(echo $DIGESTS | jq -r '.target') == "$TARGET" ]]; then
            DIGEST=$(echo $DIGESTS | jq -r '.digest')
          else
            echo "Error: Could not find digest for target $TARGET"
            exit 1
          fi
          
          IMAGE=ghcr.io/rocm/therock_pytorch_dev_ubuntu_24_04_$TARGET
          VERSION=${{ env.VERSION }}

          echo "Using image: $IMAGE"
          echo "Using digest: $DIGEST"
          echo "Using version: $VERSION"

          docker pull $IMAGE@$DIGEST
          docker tag $IMAGE@$DIGEST $IMAGE:$VERSION
          docker push $IMAGE:$VERSION
