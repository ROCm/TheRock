# This CI workflow is triggered by:
#   - scheduled run
#
# In the scheduled run, we run all targets from amdgpu_family_matrix.py and amdgpu_family_matrix_xfail.py
# As some of these builds are xfail, we allow errors to occur with `continue-on-error`, where the job will fail but the workflow is green

name: CI Weekly (New)

on:
  # For AMD GPU families that expect_failure, we run builds and tests from this scheduled trigger
  schedule:
    - cron: "0 2 * * 0" # Runs weekly at 2 AM UTC every Sunday
  workflow_dispatch:
    inputs:
      linux_amdgpu_families:
        type: string
        description: "Insert comma-separated list of Linux GPU families to build and test. ex: gfx94X, gfx1201X"
        default: ""
      linux_amdgpu_families_predefined_groups:
        type: string
        description: "Insert comma-separated list of predefined group(s) of Linux GPU families found in build_tools/github_actions/new_amdgpu_family_matrix.py (e.g. amdgpu_presubmit)"
        default: ""
      linux_use_prebuilt_artifacts:
        type: boolean
        description: "If enabled, the CI will pull Linux artifacts using artifact_run_id and only run tests"
      windows_amdgpu_families:
        type: string
        description: "Insert comma-separated list of Windows GPU families to build and test. ex: gfx94X, gfx1201X"
        default: ""
      windows_amdgpu_families_predefined_groups:
        type: string
        description: "Insert comma-separated list of predefined group(s) of Windows GPU families found in build_tools/github_actions/new_amdgpu_family_matrix.py (e.g. amdgpu_presubmit)"
        default: ""
      windows_use_prebuilt_artifacts:
        type: boolean
        description: "If enabled, the CI will pull Windows artifacts using artifact_run_id and only run tests"
      artifact_run_id:
        type: string
        description: "If provided, the tests will run on this artifact ID"
        default: ""

permissions:
  contents: read

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  setup:
    uses: ./.github/workflows/new_setup.yml
    with:
      # ci triggered via cron do not accept input values so we have to set them here
      linux_amdgpu_families: ${{ github.event_name == 'schedule' && 'gfx1151' || github.event.inputs.linux_amdgpu_families }}
      linux_amdgpu_families_predefined_groups: ${{ github.event_name == 'schedule' && '' || github.event.inputs.linux_amdgpu_families_predefined_groups }}
      linux_use_prebuilt_artifacts: ${{ github.event_name == 'schedule' && '' || github.event.inputs.linux_use_prebuilt_artifacts }}
      windows_amdgpu_families: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_amdgpu_families }}
      windows_amdgpu_families_predefined_groups: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_amdgpu_families_predefined_groups }}
      windows_use_prebuilt_artifacts: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_use_prebuilt_artifacts }}
      artifact_run_id: ${{ github.event_name == 'schedule' && '' || github.event.inputs.artifact_run_id }}

  setup_cmake4:
    uses: ./.github/workflows/new_setup.yml
    with:
      # ci triggered via cron do not accept input values so we have to set them here
      linux_amdgpu_families: ${{ github.event_name == 'schedule' && 'gfx1151' || github.event.inputs.linux_amdgpu_families }}
      linux_amdgpu_families_predefined_groups: ${{ github.event_name == 'schedule' && '' || github.event.inputs.linux_amdgpu_families_predefined_groups }}
      linux_use_prebuilt_artifacts: ${{ github.event_name == 'schedule' && '' || github.event.inputs.linux_use_prebuilt_artifacts }}
      windows_amdgpu_families: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_amdgpu_families }}
      windows_amdgpu_families_predefined_groups: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_amdgpu_families_predefined_groups }}
      windows_use_prebuilt_artifacts: ${{ github.event_name == 'schedule' && '' || github.event.inputs.windows_use_prebuilt_artifacts }}
      artifact_run_id: ${{ github.event_name == 'schedule' && '' || github.event.inputs.artifact_run_id }}
      # ghcr.io/rocm/therock_build_manylinux_x86_64:users-lpromber-DockerCmake4
      container_image_linux: "ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:60d4208c75dfe3025d0744c336729088774758fa06eea5cc622787ba86416425"
      # we always want to build and not use artifacts
      force_build: "true"

  weekly_linux_cmake4_build_and_test:
    name: 'Weekly: Linux CMake 4'
    needs: setup_cmake4
    if: >-
      ${{ needs.setup_cmake4.outputs.amdgpu_family_matrix.linux != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        linux_config: ${{ fromJSON(needs.setup_cmake4.outputs.amdgpu_family_matrix.linux) }}
    uses: ./.github/workflows/new_ci_linux.yml
    secrets: inherit
    with:
      amdgpu_families_config: ${{ matrix.linux_config }}
      artifact_run_id: ${{ inputs.artifact_run_id }}
      linux_use_prebuilt_artifacts: ${{ inputs.linux_use_prebuilt_artifacts == true && 'true' || 'false' }}
      container_image: ${{ fromJSON(needs.setup_cmake4.outputs.container_image_linux) }}
    permissions:
      contents: read
      id-token: write

  # windows_build_and_test:
  #   name: Windows
  #   needs: setup
  #   if: >-
  #     ${{
  #       needs.setup.outputs.windows_amdgpu_families != '[]' &&
  #       needs.setup.outputs.enable_build_jobs == 'true'
  #     }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       families: ${{ fromJSON(needs.setup.outputs.windows_amdgpu_families) }}
  #   uses: ./.github/workflows/ci_windows.yml
  #   with:
  #     amdgpu_families: ${{ matrix.families.family }}
  #     test_runs_on: ${{ matrix.families.test-runs-on }}
  #     artifact_run_id: ${{ inputs.artifact_run_id }}
  #     extra_cmake_options: ${{ matrix.extra_cmake_options }}
  #     expect_failure: ${{ matrix.families.expect_failure == true }}
  #     windows_use_prebuilt_artifacts: ${{ inputs.windows_use_prebuilt_artifacts == true && 'true' || 'false' }}
  #   permissions:
  #     contents: read
  #     id-token: write

  # build_python_packages:
  #   name: Build Python Packages
  #   uses: ./.github/workflows/build_python_packages.yml
