name: TheRock Sanity Check

on:
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      test_runs_on:
        type: string
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      test_runs_on:
        type: string
  push:
    branches:
      - ADHOCBUILD

jobs:
  test_sanity_check:
    name: "Sanity ROCM Test"
    runs-on: ${{ inputs.test_runs_on }}
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      ARTIFACT_RUN_ID: "${{ inputs.artifact_run_id != '' && inputs.artifact_run_id || github.run_id }}"
      BUILD_ARTIFACTS_DIR: "${{ github.workspace }}/build/artifacts"
      THEROCK_BIN_DIR: "${{ github.workspace }}/build/artifacts/output_dir/bin"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install the AWS tool
        run: ./dockerfiles/cpubuilder/install_awscli.sh


      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: 3.11

      - name: Create Python venv
        run: |
          python -m venv ${VENV_DIR}
          source ${VENV_DIR}/bin/activate
          pip install -r requirements-test.txt

      - name: Download and Unpack Artifacts
        run: |
          source ${VENV_DIR}/bin/activate

          # TODO(sosa): We should infer this from the runner. For Libs and Above it should be based on the
          # runner, everything else is generic. Use just generic since this is all core/below.
          echo "Making ${BUILD_ARTIFACTS_DIR} directory"
          mkdir -p "${BUILD_ARTIFACTS_DIR}"

          echo "Downloading artifacts"
          python ${{ github.workspace }}/build_tools/fetch_artifacts.py \
            --run-id=${ARTIFACT_RUN_ID} \
            --build-dir=${BUILD_ARTIFACTS_DIR}

          echo "Unpacking artifacts"
          mkdir ${BUILD_ARTIFACTS_DIR}/output_dir
          python ${{ github.workspace }}/build_tools/fileset_tool.py artifact-flatten ${BUILD_ARTIFACTS_DIR}/*.tar.xz -o ${BUILD_ARTIFACTS_DIR}/output_dir --verbose

      - name: Run rocminfo
        run: |
          ${THEROCK_BIN_DIR}/rocminfo

      - name: Run ROCm Sanity Tests
        run: |
          source ${VENV_DIR}/bin/activate
          pytest tests/ \
          --log-cli-level=info
