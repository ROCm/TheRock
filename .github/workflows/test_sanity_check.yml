name: TheRock Sanity Check

on:
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
        default: ""
      test_runs_on:
        type: string
      platform:
        type: string
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
        default: ""
      test_runs_on:
        type: string
      platform:
        type: string
  push:
    branches:
      - ADHOCBUILD

permissions:
  contents: read
  id-token: write

jobs:
  test_sanity_check:
    name: "Sanity ROCM Test"
    runs-on: ${{ inputs.test_runs_on }}
    defaults:
      run:
        shell: bash
    steps:
      # First, configure AWS credentials on the host
      - name: Configure AWS Credentials on Host
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-tests
      
      - name: Setup AWS credentials file for container
        run: |
          # Create a directory for AWS credentials
          sudo mkdir -p /tmp/aws-creds
          
          # Write credentials to a file
          echo "[default]" | sudo tee /tmp/aws-creds/credentials
          echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" | sudo tee -a /tmp/aws-creds/credentials
          echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" | sudo tee -a /tmp/aws-creds/credentials
          echo "aws_session_token=$AWS_SESSION_TOKEN" | sudo tee -a /tmp/aws-creds/credentials
          
          # Set permissions
          sudo chmod 644 /tmp/aws-creds/credentials
      
      # Now run the container with the credentials mounted
      - name: Run Tests in Container
        uses: docker://ghcr.io/rocm/no_rocm_image_ubuntu24_04@sha256:405945a40deaff9db90b9839c0f41d4cba4a383c1a7459b28627047bf6302a26
        with:
          options: --ipc host
            --group-add video
            --device /dev/kfd
            --device /dev/dri
            --group-add 992
            --env-file /etc/podinfo/gha-gpu-isolation-settings
            -v /tmp/aws-creds:/root/.aws:ro
          run: |
            export AWS_SHARED_CREDENTIALS_FILE=/root/.aws/credentials
            ls
            echo $AWS_SHARED_CREDENTIALS_FILE
            cat $AWS_SHARED_CREDENTIALS_FILE || cat /root/.aws/credentials
            aws sts get-caller-identity
            # Rest of your test commands...
