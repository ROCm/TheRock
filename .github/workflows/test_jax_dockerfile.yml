name: Test JAX Docker Image

on:
  workflow_dispatch:
    inputs:
      test_runs_on:
        required: true
        type: string
        default: "linux-mi325-1gpu-ossci-rocm"
      image_name:
        required: true
        description: JAX docker image to run tests with
        type: string
      jax_test_branch:
        required: true
        description: JAX test repo branch to get unit tests from
        type: string
        default: "rocm-jaxlib-v0.6.0"


  workflow_call:
    inputs:
      test_runs_on:
        required: true
        type: string
      image_name:
        required: true
        description: JAX docker image to run tests with
        type: string
      jax_test_branch:
        required: true
        description: JAX test repo branch to get unit tests from
        type: string
        default: "rocm-jaxlib-v0.6.0"

permissions:
  contents: read

jobs:
  test_wheels:
    name: Test | ${{ inputs.jax_test_branch }}
    runs-on: ${{ inputs.test_runs_on }}
    strategy:
      matrix:
        jax_ref: [master]
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout JAX plugin repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repo: rocm/rocm-jax
          ref: ${{ matrix.jax_ref }}

      - name: Checkout JAX tests repo
        uses: actions/checkout@v4
        with:
          repository: rocm/jax
          ref: ${{ inputs.jax_test_branch }}
          path: jax

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run unit tests
        run: |
          python3 build/ci_build test ${{ inputs.image_name }} \
            --test-cmd "pytest jax/tests/linalg_test.py"
            #--test-cmd "python jax_rocm_plugin/build/rocm/run_single_gpu.py -c"

      - name: Test Sciforium model
        run: |
          echo Not there yet
          
