name: Test Packages

on:
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
      test_runs_on:
        type: string
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
      test_runs_on:
        type: string
  push:
    branches:
      - ADHOCBUILD

jobs:
  configure_test_matrix:
    name: "Configure test matrix"
    # if there is a test machine available
    if: ${{ inputs.test_runs_on != '' }}
    runs-on: ${{ inputs.test_runs_on }}
    outputs:
      components: ${{ steps.configure.outputs.components }}
      platform: ${{ steps.configure.outputs.platform }}
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setting up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.11

      - name: "Configuring CI options"
        id: configure
        run: python ./build_tools/github_actions/fetch_test_configurations.py

  test_sanity_check:
    name: 'Test Sanity Check'
    needs: configure_test_matrix
    uses: './.github/workflows/test_sanity_check.yml'
    with:
      artifact_run_id: ${{ inputs.artifact_run_id }}
      amdgpu_families: ${{ inputs.amdgpu_families }}
      test_runs_on: ${{ inputs.test_runs_on }}
      platform: ${{ needs.configure_test_matrix.outputs.platform }}

  test_components:
    name: 'Test ${{ matrix.components.job_name }}'
    runs-on: ${{ inputs.test_runs_on }}
    container:
      image: ${{ needs.configure_test_matrix.outputs.platform == 'linux' && 'ghcr.io/rocm/no_rocm_image_ubuntu24_04@sha256:405945a40deaff9db90b9839c0f41d4cba4a383c1a7459b28627047bf6302a26' || null }}
      options: --ipc host
        --group-add video
        --device /dev/kfd
        --device /dev/dri
        --group-add 992
        --env-file /etc/podinfo/gha-gpu-isolation-settings
    needs: [test_sanity_check, configure_test_matrix]
    # skip tests if no test matrix to run
    if: ${{ needs.configure_test_matrix.outputs.components != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        components: ${{ fromJSON(needs.configure_test_matrix.outputs.components) }}
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      ARTIFACT_RUN_ID: "${{ inputs.artifact_run_id != '' && inputs.artifact_run_id || github.run_id }}"
      OUTPUT_ARTIFACTS_DIR: "./build"
      THEROCK_BIN_DIR: "./build/bin"
      PLATFORM: ${{ inputs.platform }}
      AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "ROCm/TheRock"

      - name: Run setup test environment workflow
        uses: './.github/actions/setup_test_environment'
        with:
          ARTIFACT_RUN_ID: ${{ env.ARTIFACT_RUN_ID }}
          AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
          OUTPUT_ARTIFACTS_DIR: ${{ env.OUTPUT_ARTIFACTS_DIR }}
          VENV_DIR: ${{ env.VENV_DIR }}
          FETCH_ARTIFACT_ARGS: ${{ matrix.components.fetch_artifact_args }}
          IS_PR_FROM_FORK: ${{ github.event.pull_request.head.repo.fork }}

      - name: Install additional packages
        if: ${{ runner.os == 'Linux' && (matrix.components.job_name == 'rocblas' || matrix.components.job_name == 'hipblaslt') }}
        run: sudo apt install libgfortran5 -y

      - name: Test
        timeout-minutes: ${{ matrix.components.timeout_minutes }}
        run: |
          ${{ matrix.components.test_script }}
