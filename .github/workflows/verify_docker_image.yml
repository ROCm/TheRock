name: Pull and Verify Docker Image

on:
  workflow_dispatch:
    inputs:
      amdgpu_target:
        description: "AMDGPU target to verify"
        required: true
        default: "gfx942"
        type: string
      image_digest:
        description: "Digest of image to verify"
        required: true
        type: string
      runner_type:
        description: "Runner type to use"
        required: true
        default: "linux-mi300-1gpu-ossci-rocm"
        type: string
  workflow_call:
    inputs:
      amdgpu_target:
        required: true
        type: string
      image_digest:
        required: true
        type: string
      runner_type:
        description: "Runner type to use"
        required: true
        type: string
jobs:
  pull-and-build-image:
    name: Verify ${{ inputs.amdgpu_target }} Docker Image
    runs-on: linux-mi300-1gpu-ossci-rocm
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install skopeo and jq
        # Ensure the tools for image inspection and JSON parsing are available
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq
      - name: Construct image reference
        id: image_ref
        run: |
          IMAGE_REF="ghcr.io/rocm/therock_pytorch_dev_ubuntu_24_04_${{ inputs.amdgpu_target }}@${{ inputs.image_digest }}"
          echo "IMAGE_REF=$IMAGE_REF" >> "$GITHUB_ENV"
          echo "Image to verify: $IMAGE_REF"
      - name: Pull Docker Image
        run: |
          docker pull "$IMAGE_REF"
      - name: Pre-download pytest wheel
        run: |
          mkdir -p pytest_wheels
          pip download pytest -d pytest_wheels
      - name: Run Docker Container and Execute Commands
        run: |
          docker run --rm \
          --device=/dev/kfd \
          --device=/dev/dri \
          --mount type=bind,source="$GITHUB_WORKSPACE/pytest_wheels",target=/wheels \
          --mount type=bind,source="$GITHUB_WORKSPACE",target=/TheRock \
          --group-add video \
          --cap-add=SYS_PTRACE \
          -w /TheRock \
          "$IMAGE_REF" \
          bash external-builds/pytorch/smoke-tests/run_smoke_tests.sh
      - name: Verify Containers Status
        run: docker ps -a
