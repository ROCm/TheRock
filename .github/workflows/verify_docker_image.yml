name: Pull and Verify Docker Image

on:
  workflow_dispatch:
    inputs:
      amdgpu_target:
        description: "AMDGPU target to verify"
        required: true
        type: string
      image_tag:
        description: "Docker image tag (version) to inspect"
        required: true
        default: "6.4.0rc20250410"  # Example default tag

  workflow_call:
    inputs:
      amdgpu_target:
        required: true
        type: string

env:
  IMAGE_REF_NAME: ${{ github.ref_name }}
  IMAGE_TAG_TO_VERIFY: ${{ github.event.inputs.image_tag }}
jobs:
  pull-and-build-image:
    name: Verify ${{ inputs.amdgpu_target }} Docker Image
    runs-on: linux-mi300-1gpu-ossci-rocm
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install skopeo and jq
        # Ensure the tools for image inspection and JSON parsing are available
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq
      - name: Get manifest digest
        id: fetch_digest
        env:
          AMDGPU_TARGET: ${{ inputs.amdgpu_target }}
          IMAGE_TAG: ${{ inputs.image_tag }}
        run: |
          IMAGE_NAME="ghcr.io/rocm/therock_pytorch_dev_ubuntu_24_04_${AMDGPU_TARGET}"
          digest=$(skopeo inspect --raw docker://$IMAGE_NAME:$IMAGE_TAG | sha256sum | awk '{print $1}')
          echo "digest ---> $digest"
          echo "digest=$digest" >> $GITHUB_OUTPUT
          IMAGE_REF="${IMAGE_NAME}@sha256:${digest}"
          echo "IMAGE_REF=$IMAGE_REF" >> "$GITHUB_ENV"
          echo "Using image: $IMAGE_REF"
      - name: Pull Docker Image
        run: |
          docker pull "$IMAGE_REF"
      - name: Pre-download pytest wheel
        run: |
          mkdir -p pytest_wheels
          pip download pytest -d pytest_wheels
      - name: Run Docker Container and Execute Commands
        run: |
          docker run --rm \
          --device=/dev/kfd \
          --device=/dev/dri \
          --mount type=bind,source="$GITHUB_WORKSPACE/pytest_wheels",target=/wheels \
          --mount type=bind,source="$GITHUB_WORKSPACE",target=/TheRock \
          --group-add video \
          --cap-add=SYS_PTRACE \
          -w /TheRock \
          "$IMAGE_REF" \
          bash external-builds/pytorch/smoke-tests/run_smoke_tests.sh
      - name: Verify Containers Status
        run: docker ps -a
