From 88f840418f8421862fb83411f8c2eeb85cc8800e Mon Sep 17 00:00:00 2001
From: Marius Brehler <marius.brehler@amd.com>
Date: Wed, 12 Mar 2025 22:41:27 +0000
Subject: [PATCH 4/7] Fix finding BLAS and LAPACK

So far it is assumed that NETLIB BLAS and LAPACK are avilable without
checking. If they are nore, the build fails when trying to link.
Switches to `find_package()` therefore which also enables using
OpenBLAS.
---
 clients/CMakeLists.txt            | 4 +++-
 clients/benchmarks/CMakeLists.txt | 4 ++--
 clients/gtest/CMakeLists.txt      | 4 ++--
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/clients/CMakeLists.txt b/clients/CMakeLists.txt
index 96d908e4..f69dee9f 100755
--- a/clients/CMakeLists.txt
+++ b/clients/CMakeLists.txt
@@ -92,7 +92,9 @@ if( BUILD_CLIENTS_BENCHMARKS OR BUILD_CLIENTS_TESTS)
     set( BLAS_LIBRARY ${BLIS_LIB} )
     set( BLIS_CPP ../common/blis_interface.cpp )
   else()
-    set( BLAS_LIBRARY "blas" )
+    find_package( LAPACK REQUIRED )
+    find_package( BLAS REQUIRED )
+    set( BLAS_LIBRARY "${BLAS_LIBRARIES}" )
   endif()
 
   # Find the package ROCmSMI
diff --git a/clients/benchmarks/CMakeLists.txt b/clients/benchmarks/CMakeLists.txt
index e05b1f09..39aa4e8c 100644
--- a/clients/benchmarks/CMakeLists.txt
+++ b/clients/benchmarks/CMakeLists.txt
@@ -80,9 +80,9 @@ endif()
 # target_compile_options does not go to linker like CMAKE_CXX_FLAGS does, so manually add
 if (NOT WIN32)
   if (BUILD_CUDA)
-    target_link_libraries( hipblaslt-bench PRIVATE -llapack -lcblas )
+    target_link_libraries( hipblaslt-bench PRIVATE -l${LAPACK_LIBRARIES} -lcblas )
   else()
-    target_link_libraries( hipblaslt-bench PRIVATE lapack cblas )
+    target_link_libraries( hipblaslt-bench PRIVATE ${LAPACK_LIBRARIES} cblas )
   endif()
   list( APPEND COMMON_LINK_LIBS "-lm -lstdc++fs")
 
diff --git a/clients/gtest/CMakeLists.txt b/clients/gtest/CMakeLists.txt
index 694670a3..64cd576a 100644
--- a/clients/gtest/CMakeLists.txt
+++ b/clients/gtest/CMakeLists.txt
@@ -90,9 +90,9 @@ target_compile_options(hipblaslt-test PRIVATE $<$<COMPILE_LANGUAGE:CXX>:${COMMON
 # target_compile_options does not go to linker like CMAKE_CXX_FLAGS does, so manually add
 
 if (BUILD_CUDA)
-  target_link_libraries( hipblaslt-test PRIVATE -llapack -lcblas )
+  target_link_libraries( hipblaslt-test PRIVATE -l${LAPACK_LIBRARIES} -lcblas )
 else()
-  target_link_libraries( hipblaslt-test PRIVATE lapack cblas )
+  target_link_libraries( hipblaslt-test PRIVATE ${LAPACK_LIBRARIES} cblas )
 endif()
 
 list( APPEND COMMON_LINK_LIBS "-lm -lstdc++fs")
-- 
2.43.0

