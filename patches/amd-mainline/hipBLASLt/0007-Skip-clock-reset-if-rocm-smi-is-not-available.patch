From 121342dcded7994a5fdf19d3256b50ae86f92454 Mon Sep 17 00:00:00 2001
From: Stella Laurenzo <stellaraccident@gmail.com>
Date: Tue, 8 Apr 2025 14:34:29 -0700
Subject: [PATCH 7/7] Skip clock reset if rocm-smi is not available.

* Pinning clocks was already conditioned on this, so the cleanup logic should also be.
---
 tensilelite/Tensile/Common/GlobalParameters.py | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/tensilelite/Tensile/Common/GlobalParameters.py b/tensilelite/Tensile/Common/GlobalParameters.py
index 8ec5f326..58dd69f4 100644
--- a/tensilelite/Tensile/Common/GlobalParameters.py
+++ b/tensilelite/Tensile/Common/GlobalParameters.py
@@ -549,7 +549,10 @@ def assignGlobalParameters(config, isaInfoMap: Dict[IsaVersion, IsaInfo]):
         globalParameters["CmakeCCompiler"] = os.environ.get("CMAKE_C_COMPILER")
 
     globalParameters["ROCmBinPath"] = os.path.join(globalParameters["ROCmPath"], "bin")
-    globalParameters["ROCmSMIPath"] = locateExe(globalParameters["ROCmBinPath"], "rocm-smi")
+    try:
+        globalParameters["ROCmSMIPath"] = locateExe(globalParameters["ROCmBinPath"], "rocm-smi")
+    except OSError:
+        printWarning("Could not find rocm-smi: features relying on it will be ignored")
     globalParameters["ROCmLdPath"] = locateExe(
         os.path.join(globalParameters["ROCmPath"], "llvm/bin"), "ld.lld"
     )
@@ -624,9 +627,12 @@ def setupRestoreClocks():
 
     def restoreClocks():
         if globalParameters["PinClocks"]:
+            # Clocks will only be pinned if rocm-smi is available, therefore
+            # we only need to restore if found.
             rsmi = globalParameters["ROCmSMIPath"]
-            subprocess.call([rsmi, "-d", "0", "--resetclocks"])
-            subprocess.call([rsmi, "-d", "0", "--setfan", "50"])
+            if rsmi is not None:
+                subprocess.call([rsmi, "-d", "0", "--resetclocks"])
+                subprocess.call([rsmi, "-d", "0", "--setfan", "50"])
 
     atexit.register(restoreClocks)
 
-- 
2.43.0

