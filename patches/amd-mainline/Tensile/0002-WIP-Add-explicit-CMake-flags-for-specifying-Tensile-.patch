From 064f5c19a7f4d46818b88fc746f3008a739fa201 Mon Sep 17 00:00:00 2001
From: Marius Brehler <marius.brehler@amd.com>
Date: Fri, 14 Feb 2025 16:37:31 +0000
Subject: [PATCH 2/2] WIP: Add explicit CMake flags for specifying Tensile
 toolchain components

---
 Tensile/cmake/TensileConfig.cmake | 62 +++++++++++++++++++++++++++----
 1 file changed, 55 insertions(+), 7 deletions(-)

diff --git a/Tensile/cmake/TensileConfig.cmake b/Tensile/cmake/TensileConfig.cmake
index e5d0f62a..ebbecb5f 100644
--- a/Tensile/cmake/TensileConfig.cmake
+++ b/Tensile/cmake/TensileConfig.cmake
@@ -84,6 +84,31 @@ endif()
 
 add_subdirectory("${Tensile_ROOT}/Source" "Tensile")
 
+# Gets a command line fragment that can be prepended to a command in order to
+# setup toolchain environment variables in a child process.
+# Generally, each of these should be promoted to flags at some point, and then
+# they should be removed from here.
+function(TensileGetEnvCommand out_var)
+  set(CommandEnv ${CMAKE_COMMAND} -E env)
+  if(Tensile_CXX_COMPILER)
+    list(APPEND CommandEnv "Tensile_CXX_COMPILER=${Tensile_CXX_COMPILER}")
+  endif()
+  if(Tensile_C_COMPILER)
+    list(APPEND CommandEnv "Tensile_C_COMPILER=${Tensile_C_COMPILER}")
+  endif()
+  if(Tensile_ASSEMBLER)
+    list(APPEND CommandEnv "Tensile_ASSEMBLER=${Tensile_ASSEMBLER}")
+  endif()
+  if(CMAKE_CXX_COMPILER_LAUNCHER)
+    list(APPEND "Tensile_CXX_COMPILER_LAUNCHER=${CMAKE_CXX_COMPILER_LAUNCHER}")
+  endif()
+  if(Tensile_TOOLCHAIN_FLAGS)
+    list(APPEND CommandEnv "Tensile_TOOLCHAIN_FLAGS=${Tensile_TOOLCHAIN_FLAGS}")
+  endif()
+  list(APPEND CommandEnv "--")
+  set("${out_var}" "${CommandEnv}" PARENT_SCOPE)
+endfunction()
+
 # Output target: ${Tensile_VAR_PREFIX}_LIBRARY_TARGET. Ensures that the libs get built in Tensile_OUTPUT_PATH/library.
 # Output symbol: ${Tensile_VAR_PREFIX}_ALL_FILES. List of full paths of all expected library files in manifest.
 function(TensileCreateLibraryFiles
@@ -190,13 +215,35 @@ function(TensileCreateLibraryFiles
     set(Options ${Options} "--code-object-version=${Tensile_CODE_OBJECT_VERSION}")
   endif()
 
-  if(Tensile_COMPILER)
-    set(Options ${Options} "--cxx-compiler=${Tensile_COMPILER}")
+  if(Tensile_CXX_COMPILER)
+    set(Options ${Options} "--cxx-compiler=${Tensile_CXX_COMPILER}")
+    # Legacy: Tensile used to separate the CXX compiler path and called it
+    # "cmake-cxx-compiler".
+    set(Options ${Options} "--cmake-cxx-compiler=${Tensile_CXX_COMPILER}")
+  else()
+    # Old-style, non path based compiler flags.
+    if(Tensile_COMPILER)
+      set(Options ${Options} "--cxx-compiler=${Tensile_COMPILER}")
+    endif()
+    if(Tensile_COMPILER_PATH)
+      set(Options ${Options} "--cmake-cxx-compiler=${Tensile_COMPILER_PATH}")
+    endif()
   endif()
 
-  if(Tensile_COMPILER_PATH)
-    set(Options ${Options} "--cmake-cxx-compiler=${Tensile_COMPILER_PATH}")
-  endif()
+  # TODO: Unsupported command-line argument.
+  # if(Tensile_C_COMPILER)
+  #   set(Options ${Options} "--c-compiler=${Tensile_C_COMPILER}")
+  # endif()
+
+  # TODO: Unsupported command-line argument.
+  # if(Tensile_ASSEMBLER)
+  # set(Options ${Options} "--assembler=${Tensile_ASSEMBLER}")
+  # endif()
+
+  # TODO: Unsupported command-line argument.
+  # if(Tensile_OFFLOAD_BUNDLER)
+  #   set(Options ${Options} "--offload-bundler=${Tensile_OFFLOAD_BUNDLER}")
+  # endif()
 
   if(Tensile_CPU_THREADS)
     set(Options ${Options} "--jobs=${Tensile_CPU_THREADS}")
@@ -215,9 +262,10 @@ function(TensileCreateLibraryFiles
     set(Options ${Options} "--architecture=${archString}")
   endif()
 
-  set(CommandLine ${Script} ${Options} ${Tensile_LOGIC_PATH} ${Tensile_OUTPUT_PATH} HIP)
+  TensileGetEnvCommand(CommandEnv)
+  set(CommandLine ${CommandEnv} ${Script} ${Options} ${Tensile_LOGIC_PATH} ${Tensile_OUTPUT_PATH} HIP)
   if (WIN32 OR (VIRTUALENV_BIN_DIR AND VIRTUALENV_PYTHON_EXENAME))
-    set(CommandLine ${VIRTUALENV_BIN_DIR}/${VIRTUALENV_PYTHON_EXENAME} ${CommandLine})
+    set(CommandLine ${CommandEnv} ${VIRTUALENV_BIN_DIR}/${VIRTUALENV_PYTHON_EXENAME} ${Script} ${Options} ${Tensile_LOGIC_PATH} ${Tensile_OUTPUT_PATH} HIP)
   endif()
   message(STATUS "Tensile_CREATE_COMMAND: ${CommandLine}")
 
-- 
2.43.0

