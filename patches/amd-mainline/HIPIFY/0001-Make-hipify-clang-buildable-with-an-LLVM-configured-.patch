From 21061ac0495ee3e854e7b03ae66f88e69d78d9dd Mon Sep 17 00:00:00 2001
From: Stella Laurenzo <stellaraccident@gmail.com>
Date: Tue, 21 Jan 2025 17:37:09 -0800
Subject: [PATCH 1/3] Make hipify-clang buildable with an LLVM configured to
 link libLLVM.so.

Without these changes, if building against and LLVM configured with `-DLLVM_LINK_LLVM_DYLIB=ON`, the resulting binary will have ODR violations resulting in the dread duplicate CL option registered errors at runtime.

In order to work in this case, executables must be uniformly linked in the same way that LLVM binaries themselves are: by setting `LLVM_LINK_COMPONENTS` vs depending directly on the (static) individual libraries. This should work in all linking modes.

Note that the problem originate because an LLVM configured in this way will configure any clang libraries to carry a transitive dep on libLLVM. Therefore, it is illegal to depend on clang (static) libraries and LLVM static libraries in combination.

There is a step further that could be taken to also support building against a shared libClang, but this is merely an optimization vs an error: since libClang is a leaf library, it is ok to depend on its static components. Perhaps total package size could be reduced by also supporting libClang, but this is left for the future.
---
 CMakeLists.txt | 51 ++++++++++++++++++++++++++++++--------------------
 1 file changed, 31 insertions(+), 20 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2083365d..a7aa9769 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -64,7 +64,35 @@ if (NOT HIPIFY_CLANG_TESTS_ONLY)
   file(GLOB_RECURSE HIPIFY_SOURCES src/*.cpp)
   file(GLOB_RECURSE HIPIFY_HEADERS src/*.h)
 
-  add_llvm_executable(hipify-clang ${HIPIFY_SOURCES} ${HIPIFY_HEADERS})
+  # In order to be compatible with an LLVM that uses LLVM_LINK_LLVM_DYLIB=ON,
+  # must link core LLVM libraries via LLVM_LINK_COMPONENTS vs directly adding
+  # them.
+  set(HIPIFY_ADDL_LINK_LIBS)
+  set(LLVM_LINK_COMPONENTS
+    ProfileData
+    Support
+    MCParser
+    MC
+    BitReader
+    Option
+    Core
+  )
+  if(LLVM_PACKAGE_VERSION VERSION_GREATER "9.0.1")
+    list(APPEND LLVM_LINK_COMPONENTS FrontendOpenMP)
+  endif()
+
+  if(LLVM_PACKAGE_VERSION VERSION_EQUAL "15.0.0" OR LLVM_PACKAGE_VERSION VERSION_GREATER "15.0.0")
+    list(APPEND LLVM_LINK_COMPONENTS WindowsDriver)
+    list(APPEND HIPIFY_ADDL_LINK_LIBS clangSupport)
+  endif()
+
+  if(LLVM_PACKAGE_VERSION VERSION_GREATER "6.0.1")
+    list(APPEND HIPIFY_ADDL_LINK_LIBS clangToolingInclusions)
+  endif()
+
+  add_llvm_executable(hipify-clang
+    ${HIPIFY_SOURCES} ${HIPIFY_HEADERS}
+  )
   target_link_directories(hipify-clang PRIVATE ${LLVM_LIBRARY_DIRS})
 
   if(HIPIFY_INCLUDE_IN_HIP_SDK)
@@ -109,25 +137,8 @@ if (NOT HIPIFY_CLANG_TESTS_ONLY)
     clangToolingCore
     clangRewrite
     clangBasic
-    LLVMProfileData
-    LLVMSupport
-    LLVMMCParser
-    LLVMMC
-    LLVMBitReader
-    LLVMOption
-    LLVMCore)
-
-  if(LLVM_PACKAGE_VERSION VERSION_GREATER "6.0.1")
-    target_link_libraries(hipify-clang PRIVATE clangToolingInclusions)
-  endif()
-
-  if(LLVM_PACKAGE_VERSION VERSION_GREATER "9.0.1")
-    target_link_libraries(hipify-clang PRIVATE LLVMFrontendOpenMP)
-  endif()
-
-  if(LLVM_PACKAGE_VERSION VERSION_EQUAL "15.0.0" OR LLVM_PACKAGE_VERSION VERSION_GREATER "15.0.0")
-    target_link_libraries(hipify-clang PRIVATE LLVMWindowsDriver clangSupport)
-  endif()
+    ${HIPIFY_ADDL_LINK_LIBS}
+  )
 
   if(LLVM_PACKAGE_VERSION VERSION_EQUAL "16.0.0" OR LLVM_PACKAGE_VERSION VERSION_GREATER "16.0.0")
     if(MSVC)
-- 
2.47.1.windows.2

