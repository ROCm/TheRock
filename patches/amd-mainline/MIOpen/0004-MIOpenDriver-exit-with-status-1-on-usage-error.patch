From b28dadd5094d254c4c52c8819aa067e81a56f620 Mon Sep 17 00:00:00 2001
From: Scott Tsai <scottt.tw@gmail.com>
Date: Thu, 10 Apr 2025 18:16:19 +0800
Subject: [PATCH 4/5] MIOpenDriver: exit with status 1 on usage error

This makes inspecting MIOpenDriver exit status after light manual testing easier.
---
 driver/driver.hpp          | 10 +++++-----
 driver/tensorop_driver.hpp |  3 +--
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/driver/driver.hpp b/driver/driver.hpp
index 12ebc8536..f5f3a6d18 100644
--- a/driver/driver.hpp
+++ b/driver/driver.hpp
@@ -351,7 +351,7 @@ inline void PadBufferSize(size_t& sz, int datatype_sz)
     }
 }
 
-[[noreturn]] inline void Usage()
+[[noreturn]] inline void Usage(int e)
 {
     printf("Usage: ./driver *base_arg* *other_args*\n");
     printf("Supported Base Arguments: conv[fp16|int8|bfp16], pool[fp16], lrn[fp16], "
@@ -363,7 +363,7 @@ inline void PadBufferSize(size_t& sz, int datatype_sz)
            "getitem[bfp16|fp16], reducecalculation[bfp16|fp16], rope[bfp16|fp16], "
            "prelu[bfp16|fp16], kthvalue[bfp16|fp16], glu[bfp16|fp16], softmarginloss[bfp16|fp16], "
            "multimarginloss[bfp16|fp16]\n");
-    exit(0); // NOLINT (concurrency-mt-unsafe)
+    exit(e); // NOLINT (concurrency-mt-unsafe)
 }
 
 inline std::string ParseBaseArg(int argc, char* argv[])
@@ -371,7 +371,7 @@ inline std::string ParseBaseArg(int argc, char* argv[])
     if(argc < 2)
     {
         printf("FAILED: Invalid Number of Input Arguments\n");
-        Usage();
+        Usage(1);
     }
 
     std::string arg = argv[1];
@@ -403,10 +403,10 @@ inline std::string ParseBaseArg(int argc, char* argv[])
        arg != "--version")
     {
         printf("FAILED: Invalid Base Input Argument\n");
-        Usage();
+        Usage(1);
     }
     else if(arg == "-h" || arg == "--help" || arg == "-?")
-        Usage();
+        Usage(0);
     else
         return arg;
 }
diff --git a/driver/tensorop_driver.hpp b/driver/tensorop_driver.hpp
index 34a84cd3b..677303e99 100644
--- a/driver/tensorop_driver.hpp
+++ b/driver/tensorop_driver.hpp
@@ -184,8 +184,7 @@ int TensorOpDriver<Tgpu, Tref>::SetTensorOpFromCmdLineArgs()
             op = static_cast<miopenTensorOp_t>(raw_op - 2);
         else
         {
-            Usage();
-            exit(-1); // NOLINT (concurrency-mt-unsafe)
+            Usage(1);
         }
     }
     return miopenStatusSuccess;
-- 
2.41.0.windows.1

